apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-core
  namespace: litmus
  labels:
    app: grafana
    component: core
spec:
  replicas: 1
  selector:
    matchLabels:
        app: grafana
        component: core
  template:
    metadata:
      labels:
        app: grafana
        component: core
    spec:
      serviceAccountName: default
      containers:
      - image: grafana/grafana:6.7.1
        name: grafana-core
        imagePullPolicy: IfNotPresent
        env:
          - name: GF_PATHS_PROVISIONING
            value: "/opt/grafana-provision"
          - name: GF_SERVER_SERVE_FROM_SUB_PATH
            value: "true"
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: "true"
          - name: GF_AUTH_ANONYMOUS_ORG_NAME
            value: "Litmus Chaos"
          - name: GF_SECURITY_ADMIN_PASSWORD
            value: "litmus@123"
          - name: GF_USERS_VIEWERS_CAN_EDIT
            value: "true"
        readinessProbe:
          httpGet:
            path: /login
            port: 3000
          initialDelaySeconds: 30
          timeoutSeconds: 1
        volumeMounts:
        - name: grafana-persistent-storage
          mountPath: /var/lib/grafana
        - name: grafana-datasource-provision
          mountPath: /opt/grafana-provision/datasources
        - name: grafana-dashboard-provision
          mountPath: /opt/grafana-provision/dashboards
        - name: grafana-dashboards
          mountPath: /var/lib/grafana/dashboards
        ports:
        - name: grafana-web
          containerPort: 3000
      volumes:
      - name: grafana-persistent-storage
        emptyDir: {}
      - name: grafana-datasource-provision
        configMap:
          name: litmus-events-grafana-datasource-provision
      - name: grafana-dashboard-provision
        configMap:
          name: litmus-events-grafana-dashboard-provision
      - name: grafana-dashboards
        configMap:
          name: litmus-events-grafana-dashboards
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-core
  namespace: litmus
  labels:
    app: grafana-core
    component: core
spec:
  type: NodePort
  ports:
    - name: grafana-web
      port: 80
      targetPort: grafana-web
  selector:
    app: grafana
    component: core

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress-grafana
  namespace: litmus
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: grafana-core
          servicePort: grafana-web
        path: /grafana